<?xml version="1.0" encoding="UTF-8" ?>
<x:schema xmlns:x="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1" xmlns:xerces="http://xerces.apache.org">

	<!-- module to run bwa aln -->
	<!-- REQUIREMENTS: python3 -->

	<!-- definition of the parameters of the module -->
	<x:complexType name="bwaAlnTaskParameterType">
		<x:all>
			<!-- input files -->
			<!-- fastq file (ending .fq, .fastq) with reads (treat mates of paired end data in 2 runs of the module), does not support compressed input files-->
			<x:element name="inReads" type="paramAbsoluteFilePath" minOccurs="1" maxOccurs="1" />
			<!-- bwa index for the reference genome to which the reads will be mapped -->
			<x:element name="bwaIndex" type="paramString" minOccurs="1" maxOccurs="1" />
			<!-- output file -->
			<!-- path to output of bwa aln (ending .sai -> binary bwa specific output format, use bwa sampe/samse to create sam format) -->
			<x:element name="outSai" type="paramString" minOccurs="1" maxOccurs="1" />
			<!-- parameters for running bwa -->
			<!-- path to bwa executable, default: bwa (in PATH) -->
			<x:element name="bwaPath" type="paramString" minOccurs="0" maxOccurs="1" />
			<!-- threads (-t), default: 1-->
			<x:element name="threads" type="paramInteger" minOccurs="0" maxOccurs="1" />
			<!-- number of best hist to stop (-R), default: not set -> use bwa default -->
			<x:element name="stopIfMoreThanBestHits" type="paramInteger" minOccurs="0" maxOccurs="1" />
		</x:all>
	</x:complexType>

	<!-- definition of the return parameters of the module -->
	<x:complexType name="bwaAlnTaskReturnType">
		<x:complexContent>
			<x:extension base="taskReturnType">
				<x:all>
					<!-- returns value: path to sai file-->
					<x:element name="bwaSaiFile" type="x:string"/>
				</x:all>
			</x:extension>
		</x:complexContent>
	</x:complexType>

	<!-- set command of script to call -->
	<x:complexType name="bwaAlnTaskOverrideType">
		<x:complexContent>
			<x:restriction base="baseAttributeTaskType">
				<x:attribute name="binName" type="x:string" fixed="main_bwa_aln.py" />
				<x:attribute name="preBinCommand" type="x:string" fixed="python3" />
			</x:restriction>
		</x:complexContent>
 	</x:complexType>

 	<!-- definition of the components of the module -->
	<x:complexType name="bwaAlnTaskType">
		<x:complexContent>
			<x:extension base="bwaAlnTaskOverrideType">
				<x:all>
					<x:element name="parameter" type="bwaAlnTaskParameterType" minOccurs="1" maxOccurs="1" />
					<x:element name="return" type="bwaAlnTaskReturnType" minOccurs="0" maxOccurs="0" />
					<x:group ref="defaultTaskElements" />
				</x:all>
			</x:extension>
		</x:complexContent>
	</x:complexType>

 	<!--  define name of the module and make it available -->
 	<x:element name="bwaAlnTask" type="bwaAlnTaskType" substitutionGroup="abstractTask" />

</x:schema>
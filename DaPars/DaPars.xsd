<?xml version="1.0" encoding="UTF-8" ?>
<x:schema xmlns:x="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1" xmlns:xerces="http://xerces.apache.org">

	<!-- definition of the task parameters -->
	<x:complexType name="DaParsTaskParameterType">
		<x:all>
			<x:element name="controlCondition" type="paramString" minOccurs="1" maxOccurs="1" />
			<x:element name="testCondition" type="paramString" minOccurs="1" maxOccurs="1" />
			<x:element name="sampleAnnotation" type="paramAbsoluteFilePath" minOccurs="1" maxOccurs="1" />
			<x:element name="excludeSamples" type="paramString" minOccurs="1" maxOccurs="unbounded" />
			<x:element name="wigFolder" type="paramAbsoluteFolderPath" minOccurs="1" maxOccurs="1" />
			<x:element name="wigEnding" type="paramString" minOccurs="0" maxOccurs="1" />
			<x:element name="annotated3UTR" type="paramAbsoluteFilePath" minOccurs="1" maxOccurs="1" />
			<x:element name="outputFile" type="paramAbsoluteFilePath" minOccurs="1" maxOccurs="1" />
			<x:element name="coverageCutoff" type="paramIntegerGreater1_DaPars" minOccurs="0" maxOccurs="1" />
			<x:element name="FDRCutoff" type="paramCutoff_DaPars" minOccurs="0" maxOccurs="1" />
			<x:element name="PDUICutoff" type="paramDouble" minOccurs="0" maxOccurs="1" />
			<x:element name="FoldChangeCutoff" type="paramDouble" minOccurs="0" maxOccurs="1" />
			<x:element name="numberOfCondASamplesReachingCutoff" type="paramIntegerGreater1_DaPars" minOccurs="0" maxOccurs="1" />
			<x:element name="numberOfCondBSamplesReachingCutoff" type="paramIntegerGreater1_DaPars" minOccurs="0" maxOccurs="1" />
		</x:all>
	</x:complexType>

	<!-- change default attributes -->
	<x:complexType name="DaParsTaskOverrideType">
		<x:complexContent>
			<x:restriction base="baseAttributeTaskType">
				<x:attribute name="binName" type="x:string" fixed="DaPars.sh" />
			</x:restriction>
		</x:complexContent>
	</x:complexType>

	<!-- definition of final task -->
	<x:complexType name="DaParsTaskType">
		<x:complexContent>
			<x:extension base="DaParsTaskOverrideType">
				<x:all>
					<x:element name="parameter" type="DaParsTaskParameterType" minOccurs="1" maxOccurs="1" />
					<x:element name="return" type="DaParsTaskReturnType" minOccurs="0" maxOccurs="0" />
					<x:group ref="defaultTaskElements" />
				</x:all>
			</x:extension>
		</x:complexContent>
	</x:complexType>

	<x:complexType name="DaParsTaskReturnType">
		<x:complexContent>
			<x:extension base="taskReturnType">
				<x:all>
					<x:element name="wiggleFile" type="x:string"/>
				</x:all>
			</x:extension>
		</x:complexContent>
	</x:complexType>

	<!-- make task definition availible via substitution group -->
	<x:element name="DaParsTask" type="DaParsTaskType" substitutionGroup="abstractTask" />

	<!-- module specific parameter types -->
	<!-- integer ranging from one to ... -->
	<x:complexType name="paramIntegerGreater1_DaPars">
		<x:simpleContent>
			<x:restriction base="paramInteger">
				<x:assert test="matches($value, '(\$\{[A-Za-z_]+\})|(\$\(.+\))|([\[\(\{](\$[A-Za-z_]+(,\s*){0,1}){0,1}([0-9]+(,\S*){0,1}){0,1}[\]\)\}])') or $value >= 1" xerces:message="Parameter with name '{$tag}' must be equal or greater than 1." />
			</x:restriction>
		</x:simpleContent>
	</x:complexType>
	<x:complexType name="paramCutoff_DaPars">
		<x:simpleContent>
			<x:restriction base="paramDouble">
				<x:assertion test="matches($value, '(\$\{[A-Za-z_]+\})|(\$\(.+\))|([\[\(\{](\$[A-Za-z_]+(,\s*){0,1}){0,1}([0-9]+(,\S*){0,1}){0,1}[\]\)\}])') or ($value >= 0 and $value &lt;= 2)"  xerces:message="Parameter with name '{$tag}' must be between 0 and 1." />
			</x:restriction>
		</x:simpleContent>
	</x:complexType>

</x:schema>

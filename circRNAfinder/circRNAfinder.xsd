<?xml version="1.0" encoding="UTF-8" ?>
<x:schema xmlns:x="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1" xmlns:xerces="http://xerces.apache.org">

	<!-- module to run STAR and circRNA_finder to detect circRNAs -->
	<!-- REQUIREMENTS: python3, awk, STAR & circRNA_finder -->

	<!-- definition of the parameters of the module -->
	<x:complexType name="circRNAfinderTaskParameterType">
		<x:all>
			<!-- input files -->
			<!-- first fastq file with paired reads or fastq file with single-end reads -->
			<x:element name="inReads1" type="paramAbsoluteFilePath" minOccurs="0" maxOccurs="1" />
			<!-- second fastq file with paired reads (for paired-end data only) -->
			<x:element name="inReads2" type="paramAbsoluteFilePath" minOccurs="0" maxOccurs="1" />
			<!-- prefix of STAR mapping including chimeric reads -->
			<x:element name="inSTAR" type="paramString" minOccurs="0" maxOccurs="1" />
			<!-- multi-fasta file with the reference genome -->
			<x:element name="reference" type="paramAbsoluteFilePath" minOccurs="0" maxOccurs="1" />
			<!-- strandedness of the sequencing data, 0=unstranded/unknown (derive strand from splice site), 1=stranded (read1), 2=stranded (read2), defaults to 0-->
			<x:element name="strandedLibrary" type="paramInteger" minOccurs="0" maxOccurs="1" />
			<!-- output files -->
			<!-- prefix for output -> writes temporary files -->
			<x:element name="outPrefix" type="paramString" minOccurs="1" maxOccurs="1" />
			<!-- path for final output file with circRNA coordinates -->
			<x:element name="outCirc" type="paramString" minOccurs="0" maxOccurs="1" />
			<!-- STAR options -->
			<!-- path to STAR executable -->
			<x:element name="starPath" type="paramAbsoluteFilePath" minOccurs="0" maxOccurs="1" />
			<!-- number of threads for STAR -->
			<x:element name="starThreads" type="paramInteger" minOccurs="0" maxOccurs="1" />
			<!-- index folder for star -->
			<x:element name="starIndex" type="paramAbsoluteFolderPath" minOccurs="0" maxOccurs="1" />
			<!-- circRNA_finder options -->
			<!-- path to circRNA_finder executable -->
			<x:element name="cfPath" type="paramAbsoluteFilePath" minOccurs="0" maxOccurs="1" />
		</x:all>
	</x:complexType>

	<!-- definition of the return parameters of the module -->
	<x:complexType name="circRNAfinderTaskReturnType">
		<x:complexContent>
			<x:extension base="taskReturnType">
				<x:all>
					<!-- returns file path of table with circular RNAs -->
					<x:element name="cfCircs" type="x:string"/>
				</x:all>
			</x:extension>
		</x:complexContent>
	</x:complexType>

	<!-- set command of script to call -->
	<x:complexType name="circRNAfinderTaskOverrideType">
		<x:complexContent>
			<x:restriction base="baseAttributeTaskType">
				<x:attribute name="binName" type="x:string" fixed="main_circrna_finder.py" />
				<x:attribute name="preBinCommand" type="x:string" fixed="python3" />
			</x:restriction>
		</x:complexContent>
 	</x:complexType>

 	<!-- definition of the components of the module -->
	<x:complexType name="circRNAfinderTaskType">
		<x:complexContent>
			<x:extension base="circRNAfinderTaskOverrideType">
				<x:all>
					<x:element name="parameter" type="circRNAfinderTaskParameterType" minOccurs="1" maxOccurs="1" />
					<x:element name="return" type="circRNAfinderTaskReturnType" minOccurs="0" maxOccurs="0" />
					<x:group ref="defaultTaskElements" />
				</x:all>
			</x:extension>
		</x:complexContent>
	</x:complexType>

 	<!--  define name of the module and make it available -->
 	<x:element name="circRNAfinderTask" type="circRNAfinderTaskType" substitutionGroup="abstractTask" />

</x:schema>